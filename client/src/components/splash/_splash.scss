@import "../../sass/bourbon/bourbon";

$color-1: #242322; // Tuatara
$color-2: #a5c4bc; // Opal
$color-3: #ffffff; // White
$color-4: #402f44; // Blackcurrant
$color-5: #e4dcca; // Pearl Bush
$S: 480px;
$M: 768px;
$L: 1080px;



$primary-font: 'Gotham Light';
$secondary-font: 'Gotham Bold';


@mixin MQ($canvas) {
  @if $canvas == S {
   @media only screen and (min-width: $S) { @content; } 
  }
  @else if $canvas == M {
   @media only screen and (min-width: $M) { @content; } 
  }
  @else if $canvas == L {
   @media only screen and (min-width: $L) { @content; } 
  }
}

// super light grid - it works with the .cd-container class inside style.scss

@mixin column($percentage, $float-direction:left) {
  width: 100% * $percentage;
  float: $float-direction;
}


@mixin center($xy:xy) {
  @if $xy == xy {
    left: 50%;
    top: 50%;
    bottom: auto;
    right: auto;
    @include transform(translateX(-50%) translateY(-50%));
  }
  @else if $xy == x {
    left: 50%;
    right: auto;
    @include transform(translateX(-50%));
  }
  @else if $xy == y {
    top: 50%;
    bottom: auto;
    @include transform(translateY(-50%));
  }
}

// border radius

@mixin border-radius($radius:.25em) {
  border-radius: $radius;
}

// antialiasing mode font rendering

@mixin font-smoothing {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}




.cd-btn {
	display: inline-block;
	padding: 1.6em 2.4em;
	font-size: 1.4rem;
	letter-spacing: .15em;	
	color: $color-3;
	font-weight: 700;
	text-transform: uppercase;
	background-color: $color-2;
	box-shadow: 0 2px 10px rgba(#000, .08);
	@include font-smoothing;
	// @include transition(box-shadow .3s);

	.no-touch &:hover {
		box-shadow: 0 6px 20px rgba(#000, .1);
	}
}

/* -------------------------------- 

Typography

-------------------------------- */

h1 {
	font-size: 2.6rem;
	line-height: 1;
	margin-bottom: 1em;
	font-family: $secondary-font;
	font-style: italic;

	@include MQ(M) {
		font-size: 5rem;
	}
}

/* -------------------------------- 

Main Content

-------------------------------- */

#intro_logo {
	height: 300px!important;
	width: 463px!important;
	margin: auto;
	display: block;

	@media (max-width: 480px) {
		height: 200px!important;
		width: 363px!important;
		margin: auto;
	}

	@media (max-width: 320px) {
		height: 150px!important;
		width: 263px!important;
		margin: auto;
		display: block;
	}

}

.cd-main-content {
	position: relative;
	z-index: 11;
	width: 100%;
	height: 100vh;
	/* vertically align its content */
	display: table;
	.center {
		/* vertically align inside parent element */
		display: table-cell;
		vertical-align: middle;
		text-align: center;
	}
}

#skipContainer {
	position: absolute;
	top: 70%;
	width: 100%;
	left: 0;
	height: auto;
	z-index: 11;

	@media (max-width: 480px) {
		// position: relative!important;
		// top: 70%;
		// width: 100px;
		// height: 50px;
		// margin: auto;
		// display: block;
	}

	#skipIntro {
		border: 1px solid white;
		outline: none;
		background: transparent;
		padding: 10px 20px;
		color: white;
		font-style: italic;
		margin: 0 auto;
		text-align: center;
		display: block;

		cursor: pointer;
		
		// opacity: 0;
	
	
	}
}


/* -------------------------------- 

Modal window 

-------------------------------- */

.cd-modal {
	position: fixed;
	top: 0;
	left: 0;
	z-index: 11!important;
	height: 100%;
	width: 100%;
	overflow: hidden;
	// background: rgba(75, 91, 133, .6), url(/logo-splatter.jpg) no-repeat center center;
	background-size: cover;
	opacity: 0;
	visibility: hidden;
	@include transition(opacity .3s 0s, visibility 0s .3s);

	.modal-content {
		height: 100vh;
		// opacity: 0;
		overflow-y: auto;
		padding: 3em 5%;
    display: flex;
    flex-direction: column; 
    justify-content: center;
    a {
      height: 400px;
      width: 400px;
      margin: auto;
      display: block;
      color: white;
      text-decoration: none;
      img {
        object-fit: contain;
        height: 100%;
        width: 100%;
      }
    }
    
		@include font-smoothing;
	}

	h1 {
		text-align: center;

		&::after {
			/* ink/brush separation */
			content: '';
			display: block;
			width: 130px;
			height: 18px;
			background: url(/ink-separation.svg) no-repeat center center;
			margin: .2em auto 0;
		}
	}
	.st0 {
		fill: #6d86a0!important;
	}
	p {
		line-height: 1.6;
		margin: 2em auto;
		max-width: 800px;
	}

	.modal-close {
		/* 'X' icon */
		position: relative;
    // top: 200px;
    z-index: 2000;
		// right: 5%;
		// height: 45px;
		// width: 45px;
		// border-radius: 50%;
		// background: rgba(#000, .3) url(/cd-icon-close.svg) no-repeat center center;
		
		/* image replacement */
		overflow: hidden;
		text-indent: 100%;
		white-space: nowrap;
		
		visibility: hidden;
		opacity: 0;
		@include transform(scale(0));
		@include transition(transform .3s 0s, visibility 0s .3s, opacity .3s 0s);

		.no-touch &:hover {
			background-color: rgba(#000, .5);
		}
	}

	&.visible {
		opacity: 1;
		visibility: visible;
		z-index: 2000;
		@include transition(opacity .7s, visibility 0s);

		.modal-content {
			/* this fixes the buggy scrolling on webkit browsers - mobile devices only - when overflow property is applied */
			-webkit-overflow-scrolling: touch;

		}

		.modal-close {
			visibility: visible;
			opacity: 1;
			@include transition(transform .3s 0s, visibility 0s 0s, opacity .3s 0s);
			@include transform(scale(1));
		}
	}

	@include MQ(L) {
		.modal-content {
			padding: 6em 5%;
		}

		.modal-close { 
			height: 60px;
			width: 60px;
		}

		p {
			font-size: 2rem;
		}
	}
}

/* -------------------------------- 

Transition Layer 

-------------------------------- */

.cd-transition-layer {
	position: fixed;
	top: 0;
	left: 0;
	z-index: 2;
	height: 100%;
	width: 100%;
	opacity: 0;
	visibility: hidden;
	overflow: hidden;

	.bg-layer {
		position: absolute;
		left: 50%;
		top: 50%;
		@include transform(translateY(-50%) translateX(-2%));
		height: 100%;
		/* our sprite is composed of 25 frames */ 
		width: 2500%;
		background: url(/smallInk.png) no-repeat 0 0;
		background-size: 100% 100%;
	}

	&.visible {
		opacity: 1;
		visibility: visible;
	}

	&.opening {
		.bg-layer {
			@include animation(cd-sequence 2s steps(24));
			@include animation-fill-mode(forwards);
		}
	}

	&.closing {
		.bg-layer {
			@include animation(cd-sequence-reverse .8s steps(12));
			@include animation-fill-mode(forwards);
		}
	}

	.no-cssanimations & {
		display: none;
	}
}

@include keyframes(cd-sequence) {
	0% {
		/* translateX(-2%) is used to horizontally center the first frame inside the viewport */
		@include transform(translateY(-50%) translateX(-2%));
	}
	100% {
		/* translateX(-98%) (2% + 96) is used to horizontally center the last frame inside the viewport  */
   		@include transform(translateY(-50%) translateX(-98%));
	}
}

@include keyframes(cd-sequence-reverse) {
	0% {
		@include transform(translateY(-50%) translateX(-98%));
	}
	100% {
   		@include transform(translateY(-50%) translateX(-2%));
	}
}